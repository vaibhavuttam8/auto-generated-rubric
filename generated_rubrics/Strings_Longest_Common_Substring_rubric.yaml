category: Strings
problem_name: Longest Common Substring
reference_solution: "class Solution {\n    int longestCommonSubstr(String str1, String\
  \ str2) {\n        int n = str1.length(), m = str2.length();\n        int dp[][]\
  \ = new int[1001][1001];\n        // dp[i][j] stores the longest common substring\
  \ length\n        // in s1[0...i-1] and s2[0....j-1]\n\n        // if one of strings\
  \ have length zero, longest common substring\n        // will also be of 0 length\n\
  \        for (int i = 0; i < n; ++i) dp[i][0] = 0;\n\n        for (int i = 0; i\
  \ < m; ++i) dp[0][i] = 0;\n\n        int res = 0; // ans\n        for (int i = 1;\
  \ i <= n; ++i) {\n            for (int j = 1; j <= m; ++j) {\n                //\
  \ if current characters are same, we increase the length by 1\n                if\
  \ (str1.charAt(i - 1) == str2.charAt(j - 1))\n                    dp[i][j] = 1 +\
  \ dp[i - 1][j - 1];\n                // else, there's no common substring ending\
  \ at i - 1 and j - 1\n                else\n                    dp[i][j] = 0;\n\n\
  \                res = Math.max(res, dp[i][j]); // storing the answer\n        \
  \    }\n        }\n        return res;\n    }\n}"
rubric_items:
- blank: '5'
  code_fragment: arr.length <= 1
  item: '[Edge case handling] Handles empty array or single element array'
  score: 1.0
- blank: '1'
  code_fragment: ITEM_1_BOOL
  item: '[Logical correctness] Correctly initializes variables before the main algorithm'
  score: 2.0
- blank: '2'
  code_fragment: ITEM_2_BOOL
  item: '[Logical correctness] Properly implements the main loop structure'
  score: 2.0
- blank: '3'
  code_fragment: ITEM_3_BOOL
  item: '[Logical correctness] Correctly handles conditional logic within the algorithm'
  score: 2.0
- blank: Multiple
  code_fragment: contains(update pattern)
  item: '[Logical correctness] Updates variables correctly during algorithm execution'
  score: 2.0
- blank: Multiple
  code_fragment: return result
  item: '[Logical correctness] Returns the correct result'
  score: 2.0
- blank: Multiple
  code_fragment: ITEM_1_BOOL _AND ITEM_2_BOOL _AND ITEM_3_BOOL
  item: '[Algorithm correctness] Correctly implements the core algorithm logic'
  score: 3.0
- blank: Multiple
  code_fragment: ITEM_2_BOOL _AND NOT(contains(nested loops))
  item: '[Algorithm efficiency] Uses an efficient approach (O(n) time complexity)'
  score: 2.0
total_points: 16.0
